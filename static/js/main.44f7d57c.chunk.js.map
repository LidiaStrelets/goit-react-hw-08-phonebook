{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Section/Section.module.css","components/Contacts/Contacts.module.css","components/ButtonAdd/ButtonAdd.module.css","components/Form/Form.module.css","services/api.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","pages/register.js","pages/login.js","components/Input/Input.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactsList/ContactsList.js","components/Contacts/Contacts.js","components/ButtonAdd/buttonAdd.js","components/Form/Form.js","components/Section/Section.js","pages/contacts.js","redux/auth/auth-selectors.js","pages/home.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/auth/auth-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","BASE_URL","token","axios","defaults","headers","common","Authorization","getContacts","a","get","data","addContact","contact","post","removeContact","id","delete","registerUser","name","email","password","user","loginUser","logoutUser","answer","getCurrentUser","registerUserRequest","createAction","registerUserSuccess","registerUserError","loginUserSuccess","loginUserRequest","loginUserError","logoutUserSuccess","logoutUserRequest","logoutUserError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","registerUserOperation","userData","dispatch","response","status","loginUserOperation","logoutUserOperation","getCurrentUserOperation","getState","persistedToken","auth","Register","useState","setName","setEmail","setPassword","useDispatch","handleInputChange","event","currentTarget","value","handleFormSubmit","preventDefault","authOperations","onSubmit","Label","type","autoComplete","onChange","Signup","Form","styled","form","label","Input","input","button","Login","LogIn","style","pattern","title","CustomInput","required","defaultProps","setUpFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactsRequest","removeContactsSuccess","removeContactsError","fetchContacts","addContactOperation","removeContactOperation","idToRemove","getItems","state","contacts","items","entities","getFilter","filter","contactsSelectors","getError","error","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactsList","filteredContacts","useSelector","className","styles","list","map","number","ContactBox","text","phone","removeBtn","onClick","contactsOperations","div","Contacts","width","actions","ButtonAdd","addBtn","setNumber","handleInput","find","alert","Section","children","section","ContactsPage","useEffect","length","getUser","authSelectors","getRefreshing","isRefreshing","getAuthStatus","userAuthorized","getToken","getUserName","HomePage","isLogedIn","Title","Greeting","Description","h1","h2","p","PrivateRoute","routeProps","to","PublicRoute","restricted","shouldRedirect","App","showAuth","setShowAuth","authButtonText","setAuthButtonText","authActive","setAuthActive","userStatus","currentUserName","currentError","textAlign","Navlist","NavItem","CustomNavLink","exact","activeClassName","UserMenu","Exit","window","location","href","classNames","current","borderRadius","AuthList","path","ul","li","NavLink","initialUserState","createReducer","_","payload","setError","authReducer","combineReducers","action","isLoading","itemsReducer","filterReducer","contactsReducer","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,QAAU,8BAA8B,KAAO,2BAA2B,MAAQ,4BAA4B,UAAY,kC,mBCAhND,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,MAAQ,0B,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,4B,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,wiBCAnBC,EAAW,yCAEJC,EAAQ,SACfA,GACFC,IAAMC,SAASC,QAAQC,OAAOC,cAA9B,iBAAwDL,IAF/CA,EAAQ,WAKjBC,IAAMC,SAASC,QAAQC,OAAOC,cAAgB,IAI3C,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBN,IAAMO,IAAN,UAAaT,EAAb,aADlB,uBACGU,EADH,EACGA,KADH,kBAGEA,GAHF,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,iBAAAJ,EAAA,sEACkBN,IAAMW,KAAN,UAAcb,EAAd,YAAkCY,GADpD,uBACGF,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAIA,SAAeI,EAAtB,kC,4CAAO,WAA6BC,GAA7B,iBAAAP,EAAA,sEACkBN,IAAMc,OAAN,UAAgBhB,EAAhB,oBAAoCe,IADtD,uBACGL,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAKA,SAAeO,EAAtB,kC,4CAAO,mCAAAT,EAAA,6DAA8BU,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,MAAOC,EAA3C,EAA2CA,SAA3C,SACclB,IAAMW,KAAN,UAAcb,EAAd,gBAAsC,CACvDkB,OACAC,QACAC,aAJG,cACCC,EADD,yBAMEA,GANF,4C,sBASA,SAAeC,EAAtB,kC,4CAAO,iCAAAd,EAAA,6DAA2BW,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,SAAlC,SACclB,IAAMW,KAAN,UAAcb,EAAd,eAAqC,CACtDmB,QACAC,aAHG,cACCC,EADD,yBAKEA,GALF,4C,sBAQA,SAAeE,IAAtB,+B,4CAAO,4BAAAf,EAAA,sEACgBN,IAAMW,KAAN,UAAcb,EAAd,iBADhB,cACCwB,EADD,yBAEEA,GAFF,4C,sBAKA,SAAeC,IAAtB,+B,4CAAO,4BAAAjB,EAAA,sEACgBN,IAAMO,IAAN,UAAaT,EAAb,kBADhB,cACCwB,EADD,yBAEEA,GAFF,4C,qDC9CME,EAAsBC,YAAa,4BACnCC,EAAsBD,YAAa,4BACnCE,EAAoBF,YAAa,0BAEjCG,EAAmBH,YAAa,yBAChCI,EAAmBJ,YAAa,yBAChCK,EAAiBL,YAAa,uBAE9BM,EAAoBN,YAAa,0BACjCO,EAAoBP,YAAa,0BACjCQ,GAAkBR,YAAa,wBAE/BS,GAAwBT,YAAa,8BACrCU,GAAwBV,YAAa,8BACrCW,GAAsBX,YAAa,4BCAnCY,GAAwB,SAAAC,GAAQ,8CAAI,WAAMC,GAAN,eAAAjC,EAAA,6DAC/CiC,EAASf,KADsC,kBAIxBT,EAAauB,GAJW,OAIvChB,EAJuC,OAK7CiB,EAASb,EAAoBJ,EAAOd,OACpCT,EAAUuB,EAAOd,KAAKT,OANuB,gDAQ7CwC,EAASZ,EAAkB,KAAMa,SAASC,SARG,yDAAJ,uDAYhCC,GAAqB,SAAAJ,GAAQ,8CAAI,WAAMC,GAAN,eAAAjC,EAAA,6DAC5CiC,EAASV,KADmC,kBAIrBT,EAAUkB,GAJW,OAIpChB,EAJoC,OAM1CiB,EAASX,EAAiBN,EAAOd,OACjCT,EAAUuB,EAAOd,KAAKT,OAPoB,gDAS1CwC,EAAST,EAAe,KAAMU,SAASC,SATG,yDAAJ,uDAa7BE,GAAsB,yDAAM,WAAMJ,GAAN,SAAAjC,EAAA,6DACvCiC,EAASP,KAD8B,kBAI/BX,IAJ+B,OAMrCkB,EAASR,KACThC,IAPqC,gDASrCwC,EAASN,GAAgB,KAAMO,SAASC,SATH,yDAAN,uDAatBG,GAA0B,yDAAM,WAAOL,EAAUM,GAAjB,mBAAAvC,EAAA,2DAGvCuC,IADaC,EAF0B,EAEzCC,KAAQhD,MAFiC,wDAS3CA,EAAU+C,GACVP,EAASL,MAVkC,kBAalBX,IAbkB,OAanCiB,EAbmC,OAezCD,EAASJ,GAAsBK,EAAShC,OAfC,kDAiBzC+B,EAASH,GAAoB,KAAMI,SAASC,SAjBH,0DAAN,yD,gBCoBxBO,GArEE,WACf,MAAwBC,mBAAS,IAAjC,mBAAOjC,EAAP,KAAakC,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOhC,EAAP,KAAckC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAO/B,EAAP,KAAiBkC,EAAjB,KACMb,EAAWc,cAEXC,EAAoB,SAAAC,GACxB,OAAQA,EAAMC,cAAcxC,MAC1B,IAAK,OAEH,YADAkC,EAAQK,EAAMC,cAAcC,OAE9B,IAAK,QAEH,YADAN,EAASI,EAAMC,cAAcC,OAE/B,IAAK,WAEH,YADAL,EAAYG,EAAMC,cAAcC,OAElC,QACE,SAIAC,EAAgB,uCAAG,WAAMH,GAAN,SAAAjD,EAAA,sDACvBiD,EAAMI,iBAENpB,EAASqB,EAAevB,sBAAsB,CAAErB,OAAMC,QAAOC,cAE7DgC,EAAQ,IACRC,EAAS,IACTC,EAAY,IAPW,2CAAH,sDAUtB,OACE,gBAAC,GAAD,CAAMS,SAAUH,EAAhB,UACE,gBAACI,GAAD,mBAEE,eAAC,GAAD,CACE9C,KAAK,OACL+C,KAAK,OACLC,aAAa,MACbP,MAAOzC,EACPiD,SAAUX,OAGd,gBAACQ,GAAD,oBAEE,eAAC,GAAD,CACE9C,KAAK,QACL+C,KAAK,OACLC,aAAa,MACbP,MAAOxC,EACPgD,SAAUX,OAGd,gBAACQ,GAAD,uBAEE,eAAC,GAAD,CACE9C,KAAK,WACL+C,KAAK,WACLC,aAAa,MACbP,MAAOvC,EACP+C,SAAUX,OAGd,eAACY,GAAD,CAAQH,KAAK,SAAb,yBAOAI,GAAOC,KAAOC,KAAV,yLAWJP,GAAQM,KAAOE,MAAV,8LAWLC,GAAQH,KAAOI,MAAV,8JAULN,GAASE,KAAOK,OAAV,2WCjDGC,GAtDD,WACZ,MAA0BzB,mBAAS,IAAnC,mBAAOhC,EAAP,KAAckC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAO/B,EAAP,KAAiBkC,EAAjB,KACMb,EAAWc,cAEXC,EAAoB,SAAAC,GACxB,OAAQA,EAAMC,cAAcxC,MAC1B,IAAK,QAEH,YADAmC,EAASI,EAAMC,cAAcC,OAE/B,IAAK,WAEH,YADAL,EAAYG,EAAMC,cAAcC,OAElC,QACE,SAIAC,EAAgB,uCAAG,WAAMH,GAAN,SAAAjD,EAAA,sDACvBiD,EAAMI,iBAENpB,EAASqB,EAAelB,mBAAmB,CAAEzB,QAAOC,cAEpDiC,EAAS,IACTC,EAAY,IANW,2CAAH,sDAStB,OACE,gBAAC,GAAD,CAAMS,SAAUH,EAAhB,UACE,gBAAC,GAAD,mBAEE,eAAC,GAAD,CACE1C,KAAK,QACL+C,KAAK,OACLC,aAAa,MACbP,MAAOxC,EACPgD,SAAUX,OAGd,gBAAC,GAAD,sBAEE,eAAC,GAAD,CACEtC,KAAK,WACL+C,KAAK,WACLC,aAAa,MACbP,MAAOvC,EACP+C,SAAUX,OAGd,eAACqB,GAAD,CAAOZ,KAAK,SAAZ,wBAOAI,GAAOC,KAAOC,KAAV,yLAWJP,GAAQM,KAAOE,MAAV,8LAWLC,GAAQH,KAAOI,MAAV,8JAULG,GAAQP,KAAOK,OAAV,2W,SCzFLF,GAAQ,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAOb,EAAV,EAAUA,KAAM/C,EAAhB,EAAgBA,KAAM6D,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,MAAOrB,EAAtC,EAAsCA,MAAOH,EAA7C,EAA6CA,kBAAmBgB,EAAhE,EAAgEA,MAAhE,OACZ,gBAAC,GAAD,WACGA,EADH,IAEE,eAACS,GAAD,CACEH,MAAK,gBAAOA,GACZb,KAAMA,EACN/C,KAAMA,EACN6D,QAASA,EACTC,MAAOA,EACPE,UAAQ,EACRvB,MAAOA,EACPQ,SAAUX,EACVU,aAAa,YAKnBO,GAAMU,aAAe,CACnBlB,KAAM,OACNO,MAAO,IAYMC,I,GAAAA,MAETT,GAAQM,KAAOE,MAAV,8LAWLS,GAAcX,KAAOI,MAAV,8J,oBC7CFU,GADK,CAAEA,YAAazD,YAAa,qBAGnC0D,GAAuB1D,YAAa,iCACpC2D,GAAuB3D,YAAa,iCACpC4D,GAAqB5D,YAAa,+BAElC6D,GAAoB7D,YAAa,8BACjC8D,GAAoB9D,YAAa,8BACjC+D,GAAkB/D,YAAa,4BAE/BgE,GAAwBhE,YAAa,iCACrCiE,GAAwBjE,YAAa,iCACrCkE,GAAsBlE,YAAa,+BCFnCmE,GAAgB,yDAAM,WAAMrD,GAAN,eAAAjC,EAAA,6DACjCiC,EAAS4C,MADwB,kBAIZ9E,IAJY,OAIzBG,EAJyB,OAK/B+B,EAAS6C,GAAqB5E,IALC,gDAO/B+B,EAAS8C,GAAmB,KAAM7C,SAASC,SAPZ,yDAAN,uDAWhBoD,GAAsB,SAAArF,GAAI,8CAAI,WAAM+B,GAAN,eAAAjC,EAAA,6DACzCiC,EAAS+C,MADgC,kBAIpB7E,EAAWD,GAJS,OAIjCW,EAJiC,OAKvCoB,EAASgD,GAAkBpE,IALY,gDAOvCoB,EAASiD,GAAgB,KAAMhD,SAASC,SAPD,yDAAJ,uDAW1BqD,GAAyB,SAAAC,GAAU,8CAAI,WAAMxD,GAAN,SAAAjC,EAAA,6DAClDiC,EAASkD,MADyC,kBAI1C7E,EAAcmF,GAJ4B,OAKhDxD,EAASmD,GAAsBK,IALiB,gDAOhDxD,EAASoD,GAAoB,KAAMnD,SAASC,SAPI,yDAAJ,uD,SCjC1CuD,GAAW,SAAAC,GAAK,OAAIA,EAAMC,SAASC,MAAMC,UACzCC,GAAY,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,QAe3BC,GAPW,CACxBP,YACAK,aACAG,SAVe,SAAAP,GAAK,OAAIA,EAAMC,SAASC,MAAMM,OAW7CC,oBAT0BC,aAAe,CAACX,GAAUK,KAAY,SAACF,EAAOG,GACxE,IAAMM,EAAmBN,EAAOO,cAChC,OAAOV,EAAMG,QAAO,qBAAGtF,KAAgB6F,cAAcC,SAASF,UCuBjDG,GAzBM,WACnB,IAAMC,EAAmBC,YAAYV,GAAkBG,qBACjDnE,EAAWc,cAEjB,OACE,qBAAI6D,UAAWC,KAAOC,KAAtB,SACGJ,EAAiBK,KAAI,gBAAGrG,EAAH,EAAGA,KAAMH,EAAT,EAASA,GAAIyG,EAAb,EAAaA,OAAb,OACpB,sBAAaJ,UAAWC,KAAOzG,QAA/B,UACE,gBAAC6G,GAAD,CAAYL,UAAWC,KAAOK,KAA9B,UACE,oBAAGN,UAAWC,KAAOnG,KAArB,SAA4BA,IAC5B,oBAAGkG,UAAWC,KAAOM,MAArB,SAA6BH,OAE/B,yBACEJ,UAAWC,KAAOO,UAClB3D,KAAK,SACL4D,QAAS,kBAAMpF,EAASqF,EAAmB9B,uBAAuBjF,KAHpE,8BALOA,SAoBX0G,GAAanD,KAAOyD,IAAV,4B,oBCzBVC,GAAW,SAAC,GAAe,IAAbhD,EAAY,EAAZA,MACZwB,EAASW,YAAYV,GAAkBF,WACvC9D,EAAWc,cAMjB,OACE,uCACE,qBAAI6D,UAAWC,KAAOrC,MAAtB,SAA8BA,IAC9B,eAAC,GAAD,CACEF,MAAO,CAAEmD,MAAO,OAChBzD,MAAM,wBACNP,KAAK,OACL/C,KAAK,SACLyC,MAAO6C,EACPhD,kBAbe,SAAAC,GACnBhB,EAASyF,GAAQ9C,YAAY3B,EAAMC,cAAcC,SAa7CoB,QAAQ,yHACRC,MAAM,ocAER,eAAC,GAAD,QAKNgD,GAAS7C,aAAe,CACtBH,MAAO,IAMMgD,U,oBChCAG,GANG,kBAChB,yBAAQf,UAAWC,KAAOe,OAAQnE,KAAK,SAAvC,0B,oBC+DaI,GA3DF,WACX,MAAwBlB,mBAAS,IAAjC,mBAAOjC,EAAP,KAAakC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOqE,EAAP,KAAea,EAAf,KAEMhC,EAAQc,YAAYV,GAAkBP,UACtCzD,EAAWc,cAEX+E,EAAc,SAAA7E,GAClB,OAAQA,EAAMC,cAAcxC,MAC1B,IAAK,OAEH,YADAkC,EAAQK,EAAMC,cAAcC,OAE9B,IAAK,SAEH,YADA0E,EAAU5E,EAAMC,cAAcC,OAEhC,QACE,SAkBN,OACE,wBAAMyD,UAAWC,KAAO9C,KAAMR,SAfX,SAAAN,GACnBA,EAAMI,iBAEFwC,EAAMkC,MAAK,SAAA3H,GAAO,OAAIA,EAAQM,OAASA,KACzCsH,MAAM,wCAIR/F,EAASqF,EAAmB/B,oBAAoB,CAAE7E,OAAMsG,YAExDpE,EAAQ,IACRiF,EAAU,MAIV,UACE,eAAC,GAAD,CACE7D,MAAM,OACNP,KAAK,OACL/C,KAAK,OACL6D,QAAQ,yHACRC,MAAM,kcACNxB,kBAAmB8E,EACnB3E,MAAOzC,IAET,eAAC,GAAD,CACEsD,MAAM,eACNP,KAAK,MACL/C,KAAK,SACL6D,QAAQ,yFACRC,MAAM,6iBACNrB,MAAO6D,EACPhE,kBAAmB8E,IAErB,eAAC,GAAD,Q,oBC1DAG,GAAU,SAAC,GAAD,IAAGzD,EAAH,EAAGA,MAAO0D,EAAV,EAAUA,SAAV,OACd,2BAAStB,UAAWC,KAAOsB,QAA3B,UACE,qBAAIvB,UAAWC,KAAOrC,MAAtB,SAA8BA,IAC7B0D,MAILD,GAAQtD,aAAe,CACrBH,MAAO,GACP0D,SAAU,IAQGD,I,SAAAA,MCGAG,GAhBM,WACnB,IAAMvC,EAAQc,YAAYV,GAAkBP,UACtCzD,EAAWc,cAMjB,OAJAsF,qBAAU,WACRpG,EAASqF,EAAmBhC,mBAC3B,CAACrD,IAGF,gBAAC,GAAD,CAASuC,MAAM,WAAf,UACE,eAAC,GAAD,IACCqB,EAAMyC,OAAS,GAAK,eAAC,GAAD,CAAU9D,MAAM,iBChBrC+D,GAAU,SAAA5C,GAAK,OAAIA,EAAMlD,KAAK5B,MAUrB2H,GAFO,CAAEC,cANF,SAAA9C,GAAK,OAAIA,EAAMlD,KAAKiG,cAMHC,cATjB,SAAAhD,GAAK,OAAIA,EAAMlD,KAAKmG,gBASYL,WAASM,SAP9C,SAAAlD,GAAK,OAAIA,EAAMlD,KAAKhD,OAOoCqJ,YAJrDzC,aAAe,CAACkC,KAAU,SAAA1H,GAC5C,OAAOA,EAAKH,SCQCqI,GAXE,WACf,IAAMC,EAAYrC,YAAY6B,GAAcG,eAC5C,OACE,uCACE,eAACM,GAAD,mCACA,eAACC,GAAD,UAAWF,EAAY,6BAA+B,4BACtD,eAACG,GAAD,qEAOAF,GAAQnF,KAAOsF,GAAV,4FAKLF,GAAWpF,KAAOuF,GAAV,+GAORF,GAAcrF,KAAOwF,EAAV,6F,4EC1BF,SAASC,GAAT,GAAoD,IAA5BrB,EAA2B,EAA3BA,SAAasB,EAAc,mBAC1DR,EAAYrC,YAAY6B,GAAcG,eAC5C,OAAO,eAAC,KAAD,6BAAWa,GAAX,aAAwBR,EAAYd,EAAW,eAAC,KAAD,CAAUuB,GAAG,c,sDCFtD,SAASC,GAAT,GAAuE,IAAhDxB,EAA+C,EAA/CA,SAA+C,IAArCyB,kBAAqC,SAAdH,EAAc,mBAC7ER,EAAYrC,YAAY6B,GAAcG,eACtCiB,EAAiBD,GAAcX,EACrC,OAAO,eAAC,KAAD,6BAAWQ,GAAX,aAAwBI,EAAiB,eAAC,KAAD,CAAUH,GAAG,MAASvB,KCcxE,I,wBAmIe2B,GAnIH,WACV,IAAM5H,EAAWc,cAEjBsF,qBAAU,WACRpG,EAASqB,EAAehB,6BACvB,CAACL,IAEJ,MAAgCU,oBAAS,GAAzC,mBAAOmH,EAAP,KAAiBC,EAAjB,KACA,EAA4CpH,mBAAS,iBAArD,mBAAOqH,EAAP,KAAuBC,EAAvB,KACA,EAAoCtH,oBAAS,GAA7C,mBAAOuH,EAAP,KAAmBC,EAAnB,KAEMC,EAAazD,YAAY6B,GAAcG,eACvC0B,EAAkB1D,YAAY6B,GAAcM,aAE5CwB,EAAe3D,YAAYV,GAAkBC,UAC7CwC,EAAe/B,YAAY6B,GAAcC,eAE/CJ,qBAAU,WACJiC,GAAcnE,iBAAM,CAAEe,KAAMoD,MAC/B,CAACA,IAMJ,OACG5B,GACC,uBAAKpE,MAAO,CAAEiG,UAAW,UAAY3D,UAAU,MAA/C,UACE,+BACE,gBAAC4D,GAAD,WACE,eAACC,GAAD,CAAS7D,UAAU,UAAnB,SACE,eAAC8D,GAAD,CACErD,QAAS,WACP8C,GAAc,IAEhBQ,OAAK,EACL/D,UAAU,UACVgE,gBAAgB,gBAChBnB,GAAG,IAPL,oBAYDW,GACC,eAACK,GAAD,CAAS7D,UAAU,UAAnB,SACE,eAAC8D,GAAD,CACErD,QAAS,WACP8C,GAAc,IAEhBvD,UAAU,UACVgE,gBAAgB,gBAChBnB,GAAG,YANL,wBAYFW,EAkDA,gBAACS,GAAD,WACE,gBAAC,GAAD,uBAAoBR,EAApB,OACA,eAACS,GAAD,CAAMzD,QAxFC,WACnBpF,EAASqB,EAAejB,wBAuFZ,wBAnDF,gBAACoI,GAAD,CACEpD,QAAS,WACP4C,EAAkB,iBAClBF,GAAaD,GACbK,GAAeD,IAGba,OAAOC,SAASC,KAAKzE,SAAS,aAC9BuE,OAAOC,SAASC,KAAKzE,SAAS,WAE9B2D,GAAc,IAGlBvD,UAAWsE,KAAW,UAAW,YAAa,CAAEC,QAASjB,IACzD5F,MAAO,CAAE8G,cAAetB,GAAY,QAdtC,UAgBGE,EAEAF,GACC,gBAACuB,GAAD,WACE,8BACE,eAACX,GAAD,CACE9D,UAAU,UACVgE,gBAAgB,gBAChBD,OAAK,EACLlB,GAAG,YACHpC,QAAS,WACP4C,EAAkB,aANtB,wBAYF,8BACE,eAACS,GAAD,CACErD,QAAS,WACP4C,EAAkB,UAEpBrD,UAAU,UACVgE,gBAAgB,gBAChBnB,GAAG,SANL,gCAsBd,eAACC,GAAD,CAAa4B,KAAK,IAAIX,OAAK,EAA3B,SACE,eAAC,GAAD,MAEF,eAACjB,GAAD,CAAa4B,KAAK,YAAYX,OAAK,EAAChB,YAAU,EAA9C,SACE,eAAC,GAAD,MAEF,eAACD,GAAD,CAAa4B,KAAK,SAASX,OAAK,EAAChB,YAAU,EAA3C,SACE,eAAC,GAAD,MAEF,eAACJ,GAAD,CAAc+B,KAAK,YAAYX,OAAK,EAApC,SACE,eAAC,GAAD,UASJH,GAAU1G,KAAOyH,GAAV,wLASPd,GAAU3G,KAAO0H,GAAV,ifA4BPd,GAAgB5G,aAAO2H,IAAP3H,CAAH,4SAkBbuH,GAAWvH,KAAOyH,GAAV,oSAkBRV,GAAW/G,KAAO0H,GAAV,gQAcRtC,GAAWpF,KAAOwF,EAAV,oEAKRwB,GAAOhH,KAAOK,OAAV,wV,2CCxOJuH,GAAmB,CAAEhL,KAAM,KAAMC,MAAO,MAExCE,GAAO8K,YAAcD,IAAD,sBACvBtK,GAAsB,SAACwK,EAAD,YAAMC,QAAsBhL,QAD3B,gBAEvBS,GAAmB,SAACsK,EAAD,YAAMC,QAAsBhL,QAFxB,gBAGvBY,GAAoB,kBAAMiK,MAHH,gBAIvB7J,IAAwB,SAAC+J,EAAD,YAAMC,WAJP,KAOpBpM,GAAQkM,YAAc,MAAD,sBACxBvK,GAAsB,SAACwK,EAAD,YAAMC,QAAsBpM,SAD1B,gBAExB6B,GAAmB,SAACsK,EAAD,YAAMC,QAAsBpM,SAFvB,gBAGxBgC,GAAoB,kBAAM,QAHF,KAMrBmH,GAAiB+C,aAAc,GAAD,sBACjCvK,GAAsB,kBAAM,KADK,gBAEjCE,GAAmB,kBAAM,KAFQ,gBAGjCG,GAAoB,kBAAM,KAHO,gBAIjCI,IAAwB,kBAAM,KAJG,KAO9B6G,GAAeiD,aAAc,GAAD,sBAC/B/J,IAAwB,kBAAM,KADC,gBAE/BC,IAAwB,kBAAM,KAFC,gBAG/BC,IAAsB,kBAAM,KAHG,KAM5BgK,GAAW,SAACF,EAAD,GACf,OADmC,EAAdC,SAEnB,KAAK,IACH,MAAO,oDACT,KAAK,IACH,MAAO,mDACT,KAAK,IACH,MAAO,kDACT,QACE,MAAO,kBAIP1F,GAAQwF,YAAc,MAAD,sBACxBtK,EAAoByK,IADI,gBAExBtK,EAAiBsK,IAFO,gBAGxBnK,GAAkBmK,IAHM,gBAIxBhK,GAAsBgK,IAJE,KAeZC,GARKC,aAAgB,CAClCnL,QACApB,SACA0G,SACAyC,kBACAF,kBCrDI5C,GAAW6F,YAAc,IAAD,mBAAC,GAC5B7G,IAAuB,SAAC8G,EAAGK,GAAJ,OAAeA,EAAOJ,WADlB,aAAC,GAG5B5G,IAAoB,SAACU,EAAOsG,GAAR,6BAAuBtG,GAAvB,CAA8BsG,EAAOJ,aAH9B,aAAC,GAK5BzG,IAAwB,SAACO,EAAD,OAAUkG,EAAV,EAAUA,QAAV,OAAwBlG,EAAMK,QAAO,qBAAGzF,KAAgBsL,QALrD,KAOxBK,GAAYP,aAAc,GAAD,mBAAC,GAC7B9G,IAAuB,kBAAM,KADD,aAAC,GAE7BC,IAAuB,kBAAM,KAFD,aAAC,GAG7BC,IAAqB,kBAAM,KAHC,aAAC,GAK7BC,IAAoB,kBAAM,KALE,aAAC,GAM7BC,IAAoB,kBAAM,KANE,aAAC,GAO7BC,IAAkB,kBAAM,KAPI,aAAC,GAS7BC,IAAwB,kBAAM,KATF,aAAC,GAU7BC,IAAwB,kBAAM,KAVF,aAAC,GAW7BC,IAAsB,kBAAM,KAXA,KAczByG,GAAW,SAACF,EAAD,GACf,OADmC,EAAdC,SAEnB,KAAK,IACH,MAAO,mDACT,KAAK,IACH,MAAO,kDACT,KAAK,IACH,MAAO,iCACT,KAAK,IACH,MAAO,mDACT,QACE,MAAO,kBAIP1F,GAAQwF,YAAc,IAAD,mBAAC,GACzB5G,GAAqB+G,IADG,aAAC,GAEzBjH,IAAuB,iBAAM,MAFL,aAAC,GAIzBK,GAAkB4G,IAJM,aAAC,GAKzB9G,IAAoB,iBAAM,MALF,aAAC,GAOzBK,GAAsByG,IAPE,aAAC,GAQzB3G,IAAwB,iBAAM,MARN,KAWrBgH,GAAeH,aAAgB,CACnClG,YACAoG,aACA/F,WAGIiG,GAAgBT,YAAc,GAAD,gBAChCjE,GAAQ9C,aAAc,SAACgH,EAAD,YAAMC,YAOhBQ,GAJSL,aAAgB,CACtCnG,MAAOsG,GACPnG,OAAQoG,K,kBC1DJE,GAAoB,CACxBC,IAAK,OACLC,Q,QAAAA,EACAC,UAAW,CAAC,UAGRC,GAAU,aACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAKnDC,GAAQC,YAAe,CAClCC,QAAS,CACP1H,SAAUyG,GACV5J,KAAM8K,aAAejB,GAAmBP,KAE1CW,cACAc,UAAUC,IAECC,GAAYC,aAAaP,IC1BtCQ,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,eAAC,KAAD,CAAaW,QAAS,KAAML,UAAWA,GAAvC,SACE,eAAC,IAAD,UACE,eAAC,GAAD,YAKRM,SAASC,eAAe,W","file":"static/js/main.44f7d57c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"text\":\"ContactsList_text__1O8Sh\",\"contact\":\"ContactsList_contact__2MNvd\",\"name\":\"ContactsList_name__1AS-g\",\"phone\":\"ContactsList_phone__3QY12\",\"removeBtn\":\"ContactsList_removeBtn__ApSAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__34Twh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"ButtonAdd_addBtn__BXYBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","import axios from 'axios';\nconst BASE_URL = 'https://connections-api.herokuapp.com/';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  reset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport async function getContacts() {\n  const { data } = await axios.get(`${BASE_URL}contacts`);\n\n  return data;\n}\nexport async function addContact(contact) {\n  const { data } = await axios.post(`${BASE_URL}contacts`, contact);\n  return data;\n}\nexport async function removeContact(id) {\n  const { data } = await axios.delete(`${BASE_URL}contacts/${id}`);\n  return data;\n}\n\nexport async function registerUser({ name, email, password }) {\n  const user = await axios.post(`${BASE_URL}users/signup`, {\n    name,\n    email,\n    password,\n  });\n  return user;\n}\n\nexport async function loginUser({ email, password }) {\n  const user = await axios.post(`${BASE_URL}users/login`, {\n    email,\n    password,\n  });\n  return user;\n}\n\nexport async function logoutUser() {\n  const answer = await axios.post(`${BASE_URL}users/logout`);\n  return answer;\n}\n\nexport async function getCurrentUser() {\n  const answer = await axios.get(`${BASE_URL}users/current`);\n  return answer;\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerUserRequest = createAction('auth/registerUserRequest');\nexport const registerUserSuccess = createAction('auth/registerUserSuccess');\nexport const registerUserError = createAction('auth/registerUserError');\n\nexport const loginUserSuccess = createAction('auth/loginUserSuccess');\nexport const loginUserRequest = createAction('auth/loginUserRequest');\nexport const loginUserError = createAction('auth/loginUserError');\n\nexport const logoutUserSuccess = createAction('auth/logoutUserSuccess');\nexport const logoutUserRequest = createAction('auth/logoutUserRequest');\nexport const logoutUserError = createAction('auth/logoutUserError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","import { getCurrentUser, loginUser, logoutUser, registerUser, token } from './../../services/api';\nimport {\n  getCurrentUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  loginUserError,\n  loginUserRequest,\n  loginUserSuccess,\n  logoutUserError,\n  logoutUserRequest,\n  logoutUserSuccess,\n  registerUserError,\n  registerUserRequest,\n  registerUserSuccess,\n} from './auth-actions';\n\nexport const registerUserOperation = userData => async dispatch => {\n  dispatch(registerUserRequest());\n\n  try {\n    const answer = await registerUser(userData);\n    dispatch(registerUserSuccess(answer.data));\n    token.set(answer.data.token);\n  } catch (error) {\n    dispatch(registerUserError(error.response.status));\n  }\n};\n\nexport const loginUserOperation = userData => async dispatch => {\n  dispatch(loginUserRequest());\n\n  try {\n    const answer = await loginUser(userData);\n\n    dispatch(loginUserSuccess(answer.data));\n    token.set(answer.data.token);\n  } catch (error) {\n    dispatch(loginUserError(error.response.status));\n  }\n};\n\nexport const logoutUserOperation = () => async dispatch => {\n  dispatch(logoutUserRequest());\n\n  try {\n    await logoutUser();\n\n    dispatch(logoutUserSuccess());\n    token.reset();\n  } catch (error) {\n    dispatch(logoutUserError(error.response.status));\n  }\n};\n\nexport const getCurrentUserOperation = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await getCurrentUser();\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.response.status));\n  }\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from './../redux/auth';\nimport styled from 'styled-components';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        return;\n      case 'email':\n        setEmail(event.currentTarget.value);\n        return;\n      case 'password':\n        setPassword(event.currentTarget.value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    dispatch(authOperations.registerUserOperation({ name, email, password }));\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Label>\n        Name:\n        <Input\n          name=\"name\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Email:\n        <Input\n          name=\"email\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Password:\n        <Input\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Signup type=\"submit\">Sign up</Signup>\n    </Form>\n  );\n};\n\nexport default Register;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: 40%;\n  margin: 0 auto;\n\n  border: 2px solid black;\n  padding: 15px;\n`;\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 100%;\n\n  font-weight: bold;\n\n  color: #94255d;\n`;\nconst Input = styled.input`\n  width: 70%;\n  margin-left: 20px;\n  padding: 5px;\n\n  color: #94255d;\n\n  border: 2px solid #94255d;\n  border-radius: 5px;\n`;\nconst Signup = styled.button`\n  padding: 5px 15px;\n  width: 130px;\n  margin-top: 10px;\n\n  background-color: rgb(126, 50, 150);\n  color: aliceblue;\n\n  border: none;\n  border-radius: 5px;\n\n  transition: background-color 250ms ease, transform 250ms ease;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(162, 63, 192);\n    transform: scale(1.1);\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from './../redux/auth';\nimport styled from 'styled-components';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    switch (event.currentTarget.name) {\n      case 'email':\n        setEmail(event.currentTarget.value);\n        return;\n      case 'password':\n        setPassword(event.currentTarget.value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    dispatch(authOperations.loginUserOperation({ email, password }));\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Label>\n        Email\n        <Input\n          name=\"email\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={handleInputChange}\n        />\n      </Label>\n      <LogIn type=\"submit\">Log in</LogIn>\n    </Form>\n  );\n};\n\nexport default Login;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: 40%;\n  margin: 0 auto;\n\n  border: 2px solid black;\n  padding: 15px;\n`;\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 100%;\n\n  font-weight: bold;\n\n  color: #94255d;\n`;\nconst Input = styled.input`\n  width: 70%;\n  margin-left: 20px;\n  padding: 5px;\n\n  color: #94255d;\n\n  border: 2px solid #94255d;\n  border-radius: 5px;\n`;\nconst LogIn = styled.button`\n  padding: 5px 15px;\n  width: 130px;\n  margin-top: 10px;\n\n  background-color: rgb(126, 50, 150);\n  color: aliceblue;\n\n  border: none;\n  border-radius: 5px;\n\n  transition: background-color 250ms ease, transform 250ms ease;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(162, 63, 192);\n    transform: scale(1.1);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Input = ({ style, type, name, pattern, title, value, handleInputChange, label }) => (\n  <Label>\n    {label}:\n    <CustomInput\n      style={{ ...style }}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n      value={value}\n      onChange={handleInputChange}\n      autoComplete=\"off\"\n    />\n  </Label>\n);\n\nInput.defaultProps = {\n  type: 'text',\n  label: '',\n};\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nexport default Input;\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 100%;\n\n  font-weight: bold;\n\n  color: #94255d;\n`;\nconst CustomInput = styled.input`\n  width: 60%;\n  margin-left: 20px;\n  padding: 5px;\n\n  color: #94255d;\n\n  border: 2px solid #94255d;\n  border-radius: 5px;\n`;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst setUpFilter = { setUpFilter: createAction('phonebook/filter') };\nexport default setUpFilter;\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const removeContactsRequest = createAction('contacts/removeContactRequest');\nexport const removeContactsSuccess = createAction('contacts/removeContactSuccess');\nexport const removeContactsError = createAction('contacts/removeContactError');\n","import { getContacts, addContact, removeContact } from '../../services/api';\nimport {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  removeContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n} from './contacts-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const data = await getContacts();\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.response.status));\n  }\n};\n\nexport const addContactOperation = data => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const user = await addContact(data);\n    dispatch(addContactSuccess(user));\n  } catch (error) {\n    dispatch(addContactError(error.response.status));\n  }\n};\n\nexport const removeContactOperation = idToRemove => async dispatch => {\n  dispatch(removeContactsRequest());\n\n  try {\n    await removeContact(idToRemove);\n    dispatch(removeContactsSuccess(idToRemove));\n  } catch (error) {\n    dispatch(removeContactsError(error.response.status));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getItems = state => state.contacts.items.entities;\nconst getFilter = state => state.contacts.filter;\nconst getError = state => state.contacts.items.error;\n\nconst getFilteredContacts = createSelector([getItems, getFilter], (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n});\n\nconst contactsSelectors = {\n  getItems,\n  getFilter,\n  getError,\n  getFilteredContacts,\n};\n\nexport default contactsSelectors;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './ContactsList.module.css';\nimport { contactsSelectors, contactsOperations } from './../../redux/contacts';\nimport styled from 'styled-components';\n\nconst ContactsList = () => {\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.list}>\n      {filteredContacts.map(({ name, id, number }) => (\n        <li key={id} className={styles.contact}>\n          <ContactBox className={styles.text}>\n            <p className={styles.name}>{name}</p>\n            <p className={styles.phone}>{number}</p>\n          </ContactBox>\n          <button\n            className={styles.removeBtn}\n            type=\"button\"\n            onClick={() => dispatch(contactsOperations.removeContactOperation(id))}\n          >\n            Remove contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\nconst ContactBox = styled.div``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport ContactsList from '../ContactsList';\nimport styles from './Contacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, actions } from './../../redux/contacts';\n\nconst Contacts = ({ title }) => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = event => {\n    dispatch(actions.setUpFilter(event.currentTarget.value));\n  };\n\n  return (\n    <>\n      <h2 className={styles.title}>{title}</h2>\n      <Input\n        style={{ width: '45%' }}\n        label=\"Find contacts by name\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        handleInputChange={handleFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n      <ContactsList />\n    </>\n  );\n};\n\nContacts.defaultProps = {\n  title: '',\n};\nContacts.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Contacts;\n","import React from 'react';\nimport styles from './ButtonAdd.module.css';\n\nconst ButtonAdd = () => (\n  <button className={styles.addBtn} type=\"submit\">\n    Add contact\n  </button>\n);\n\nexport default ButtonAdd;\n","import React, { useState } from 'react';\nimport Input from '../Input';\nimport ButtonAdd from '../ButtonAdd';\n\nimport styles from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from './../../redux/contacts';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(contactsSelectors.getItems);\n  const dispatch = useDispatch();\n\n  const handleInput = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        return;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (items.find(contact => contact.name === name)) {\n      alert('Attempt to create existing contact!');\n      return;\n    }\n\n    dispatch(contactsOperations.addContactOperation({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onFormSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        handleInputChange={handleInput}\n        value={name}\n      />\n      <Input\n        label=\"Phone number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        value={number}\n        handleInputChange={handleInput}\n      />\n      <ButtonAdd />\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import Contacts from './../components/Contacts';\nimport Form from './../components/Form';\nimport Section from './../components/Section';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { contactsOperations, contactsSelectors } from './../redux/contacts';\n\nconst ContactsPage = () => {\n  const items = useSelector(contactsSelectors.getItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section title=\"Phonebok\">\n      <Form />\n      {items.length > 0 && <Contacts title=\"Contacts\" />}\n    </Section>\n  );\n};\n\nexport default ContactsPage;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getAuthStatus = state => state.auth.userAuthorized;\nconst getUser = state => state.auth.user;\nconst getToken = state => state.auth.token;\nconst getRefreshing = state => state.auth.isRefreshing;\n\nconst getUserName = createSelector([getUser], user => {\n  return user.name;\n});\n\nconst authSelectors = { getRefreshing, getAuthStatus, getUser, getToken, getUserName };\n\nexport default authSelectors;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst HomePage = () => {\n  const isLogedIn = useSelector(authSelectors.getAuthStatus);\n  return (\n    <>\n      <Title>Best phonebook ever!</Title>\n      <Greeting>{isLogedIn ? 'Welcome to your phonebook!' : 'Authorize now to start!'}</Greeting>\n      <Description>Here you can keep your contacts and work with them</Description>\n    </>\n  );\n};\n\nexport default HomePage;\n\nconst Title = styled.h1`\n  margin-top: 200px;\n  margin-bottom: 0;\n  color: #94255d;\n`;\nconst Greeting = styled.h2`\n  width: 60%;\n  margin-left: auto;\n  margin-right: auto;\n\n  color: #94255d;\n`;\nconst Description = styled.p`\n  margin-top: 20px;\n  margin-bottom: 0;\n\n  color: #94255d;\n`;\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PrivateRoute({ children, ...routeProps }) {\n  const isLogedIn = useSelector(authSelectors.getAuthStatus);\n  return <Route {...routeProps}>{isLogedIn ? children : <Redirect to=\"/login\" />}</Route>;\n}\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nexport default function PublicRoute({ children, restricted = false, ...routeProps }) {\n  const isLogedIn = useSelector(authSelectors.getAuthStatus);\n  const shouldRedirect = restricted && isLogedIn;\n  return <Route {...routeProps}>{shouldRedirect ? <Redirect to=\"/\" /> : children}</Route>;\n}\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Register from './pages/register';\nimport Login from './pages/login';\nimport ContactsPage from './pages/contacts';\nimport HomePage from './pages/home';\nimport styled from 'styled-components';\n\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authSelectors from './redux/auth/auth-selectors';\nimport { authOperations } from './redux/auth';\nimport { contactsSelectors } from './redux/contacts';\n\nimport { error } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUserOperation());\n  }, [dispatch]);\n\n  const [showAuth, setShowAuth] = useState(false);\n  const [authButtonText, setAuthButtonText] = useState('authorization');\n  const [authActive, setAuthActive] = useState(false);\n\n  const userStatus = useSelector(authSelectors.getAuthStatus);\n  const currentUserName = useSelector(authSelectors.getUserName);\n\n  const currentError = useSelector(contactsSelectors.getError);\n  const isRefreshing = useSelector(authSelectors.getRefreshing);\n\n  useEffect(() => {\n    if (currentError) error({ text: currentError });\n  }, [currentError]);\n\n  const handleLogOut = () => {\n    dispatch(authOperations.logoutUserOperation());\n  };\n\n  return (\n    !isRefreshing && (\n      <div style={{ textAlign: 'center' }} className=\"App\">\n        <nav>\n          <Navlist>\n            <NavItem className=\"navItem\">\n              <CustomNavLink\n                onClick={() => {\n                  setAuthActive(false);\n                }}\n                exact\n                className=\"navLink\"\n                activeClassName=\"navLinkActive\"\n                to=\"/\"\n              >\n                home\n              </CustomNavLink>\n            </NavItem>\n            {userStatus && (\n              <NavItem className=\"navItem\">\n                <CustomNavLink\n                  onClick={() => {\n                    setAuthActive(false);\n                  }}\n                  className=\"navLink\"\n                  activeClassName=\"navLinkActive\"\n                  to=\"/contacts\"\n                >\n                  contacts\n                </CustomNavLink>\n              </NavItem>\n            )}\n            {!userStatus ? (\n              <NavItem\n                onClick={() => {\n                  setAuthButtonText('authorization');\n                  setShowAuth(!showAuth);\n                  setAuthActive(!authActive);\n\n                  if (\n                    window.location.href.includes('register') ||\n                    window.location.href.includes('login')\n                  ) {\n                    setAuthActive(true);\n                  }\n                }}\n                className={classNames('navItem', ' withList', { current: authActive })}\n                style={{ borderRadius: !showAuth && '20px' }}\n              >\n                {authButtonText}\n\n                {showAuth && (\n                  <AuthList>\n                    <li>\n                      <CustomNavLink\n                        className=\"navLink\"\n                        activeClassName=\"navLinkActive\"\n                        exact\n                        to=\"/register\"\n                        onClick={() => {\n                          setAuthButtonText('register');\n                        }}\n                      >\n                        register\n                      </CustomNavLink>\n                    </li>\n                    <li>\n                      <CustomNavLink\n                        onClick={() => {\n                          setAuthButtonText('login');\n                        }}\n                        className=\"navLink\"\n                        activeClassName=\"navLinkActive\"\n                        to=\"/login\"\n                      >\n                        login\n                      </CustomNavLink>\n                    </li>\n                  </AuthList>\n                )}\n              </NavItem>\n            ) : (\n              <UserMenu>\n                <Greeting>Welcome, {currentUserName}!</Greeting>\n                <Exit onClick={handleLogOut}>Log out</Exit>\n              </UserMenu>\n            )}\n          </Navlist>\n        </nav>\n        <PublicRoute path=\"/\" exact>\n          <HomePage />\n        </PublicRoute>\n        <PublicRoute path=\"/register\" exact restricted>\n          <Register />\n        </PublicRoute>\n        <PublicRoute path=\"/login\" exact restricted>\n          <Login />\n        </PublicRoute>\n        <PrivateRoute path=\"/contacts\" exact>\n          <ContactsPage />\n        </PrivateRoute>\n      </div>\n    )\n  );\n};\n\nexport default App;\n\nconst Navlist = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n  margin-bottom: 20px;\n  padding: 20px;\n  list-style: none;\n`;\nconst NavItem = styled.li`\n  position: relative;\n\n  width: calc(100% / 3 - 40px);\n  padding: 10px 0;\n\n  color: #94255d;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 40px;\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n  &:hover,\n  &:focus,\n  &:active,\n  &.current {\n    background-color: #dc8db1;\n    color: white;\n\n    border-radius: 20px;\n\n    &.withList {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n`;\nconst CustomNavLink = styled(NavLink)`\n  display: inline-block;\n  width: 100%;\n\n  color: #94255d;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: 40px;\n\n  &:hover,\n  &:focus,\n  &.navLinkActive {\n    background-color: #dc8db1;\n    color: white;\n\n    border-radius: 20px;\n  }\n`;\nconst AuthList = styled.ul`\n  position: absolute;\n  bottom: -140%;\n  left: 0;\n\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  background-color: #dc8db1;\n  color: white;\n\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  & > li {\n  }\n`;\nconst UserMenu = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  width: calc(100% / 3 - 40px);\n  padding: 20px;\n\n  font-size: 20px;\n  color: #94255d;\n\n  border: 2px solid #94255d;\n  border-radius: 10px;\n`;\nconst Greeting = styled.p`\n  margin: 0;\n\n  font-weight: bold;\n`;\nconst Exit = styled.button`\n  padding: 5px 15px;\n  width: 130px;\n\n  background-color: rgb(126, 50, 150);\n  color: aliceblue;\n\n  border: none;\n  border-radius: 5px;\n\n  transition: background-color 250ms ease, transform 250ms ease;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(162, 63, 192);\n    transform: scale(1.1);\n  }\n`;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  getCurrentUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  loginUserError,\n  loginUserSuccess,\n  logoutUserError,\n  logoutUserSuccess,\n  registerUserError,\n  registerUserSuccess,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerUserSuccess]: (_, { payload }) => payload.user,\n  [loginUserSuccess]: (_, { payload }) => payload.user,\n  [logoutUserSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerUserSuccess]: (_, { payload }) => payload.token,\n  [loginUserSuccess]: (_, { payload }) => payload.token,\n  [logoutUserSuccess]: () => null,\n});\n\nconst userAuthorized = createReducer(false, {\n  [registerUserSuccess]: () => true,\n  [loginUserSuccess]: () => true,\n  [logoutUserSuccess]: () => false,\n  [getCurrentUserSuccess]: () => true,\n});\n\nconst isRefreshing = createReducer(false, {\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nconst setError = (_, { payload }) => {\n  switch (payload) {\n    case 400:\n      return 'Invalid data entered, please, change your inputs!';\n    case 500:\n      return 'Oops, something went wrong :( Please, try again!';\n    case 401:\n      return 'You shouls authorize to perform this operation!';\n    default:\n      return 'Unknown error';\n  }\n};\n\nconst error = createReducer(null, {\n  [registerUserError]: setError,\n  [loginUserError]: setError,\n  [logoutUserError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst authReducer = combineReducers({\n  user,\n  token,\n  error,\n  userAuthorized,\n  isRefreshing,\n});\n\nexport default authReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions, {\n  addContactError,\n  addContactRequest,\n  addContactSuccess,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  removeContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n} from './contacts-actions';\n\nconst entities = createReducer([], {\n  [fetchContactsSuccess]: (_, action) => action.payload,\n\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n\n  [removeContactsSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [removeContactsRequest]: () => true,\n  [removeContactsSuccess]: () => false,\n  [removeContactsError]: () => false,\n});\n\nconst setError = (_, { payload }) => {\n  switch (payload) {\n    case 400:\n      return 'Oops, something went wrong :( Please, try again!';\n    case 401:\n      return 'You shouls authorize to perform this operation!';\n    case 404:\n      return 'No data found for current user';\n    case 500:\n      return 'Oops, something went wrong :( Please, try again!';\n    default:\n      return 'Unknown error';\n  }\n};\n\nconst error = createReducer('', {\n  [fetchContactsError]: setError,\n  [fetchContactsRequest]: () => '',\n\n  [addContactError]: setError,\n  [addContactRequest]: () => '',\n\n  [removeContactsError]: setError,\n  [removeContactsRequest]: () => '',\n});\n\nconst itemsReducer = combineReducers({\n  entities,\n  isLoading,\n  error,\n});\n\nconst filterReducer = createReducer('', {\n  [actions.setUpFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\nexport default contactsReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport authReducer from './auth/auth-reducer';\nimport contactsReducer from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { persistor, store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}